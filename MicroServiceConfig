
===============================================================
Steps to develop Service Registry Application (Eureka Server)
===============================================================

1) Create SpringBoot application with below dependency

	 - Eureka Server (spring-cloud-starter-netflix-eureka-server)
	 - devtools

2) Configure @EnableEurekaServer annotation in boot start class

3) Configure below properties in application.yml file

spring:
  application:
    name: 01_Service_Registry
server:
  port: 8761
eureka:
  client:
    register-with-eureka: false	


Note-1: If "Service-Registry" project port is 8761 then clients can discover "service-registry" and will register automatically with service-registry. 

Note-2 : If service-registry project running on any other port number then we have to register clients with service-registry manually.

4) Once application started we can access Eureka Dashboard using below URL

		URL : http://localhost:8761/


======================================
Steps to develop Spring Admin-Server
======================================

1) Create Boot application with "admin-server" dependency 
  (select it while creating the project)

2) Configure @EnableAdminServer annotation at start class 

3) Change Port Number (Optional)

spring:
  application:
    name: 02_Admin_Server
server:
  port: 1111


4) Run the boot application

5) Access application URL in browser (We can see Admin Server UI)

    URL : http://localhost:1111/    


======================================
Steps to work with Zipkin Server
======================================    

1) Download Zipin Jar file 

    URL : https://zipkin.io/pages/quickstart.html

2) Run zipkin jar file 

    $ java -jar <jar-name>    

3) Zipkin Server Runs on Port Number 9411 

4) Access zipkin server dashboard

    URL : http://localhost:9411/    


================================
Developing Config Server App
================================    

1) Create Git Repository and keep ymls files required for microservices

Note: we should keep file name as application-name.


### Git Repo : https://github.com/ashokitschool/configuration_properties


2) Create Spring Starter application with below dependencies

    a) Config Server
    b) devtools

3) Write @EnableConfigServer annotation at boot start class  


4) Configure below properties in application.yml file

spring:
  application:
    name: 07_Cloud_Config_Server
  cloud:
    config:
      server:
        git:
          uri: https://github.com/ashokitschool/configuration_properties
server:
  port: 2222  

5) Run Config Server application


====================
Develop Product_API
====================

1) Create Spring Boot application with below dependencies

    - eureka-discovery-client
    - admin-client  
    - zipkin
    - config client

    - starter-data-rest
    - data-jpa
    - mysql driver
    - devtools
    - actuator

2) Configure @EnableDiscoveryClient annotation at boot start class.


3) Configure below properties in application.yml file

spring:
  application:
    name: products-api
  config:
    import: optional:configserver:http://localhost:2222

3) create "products-api.yml" in git repo which we have configured in "config-server" with below properties

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/ashokit_ecomm
    username: root
    password: root
  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true
  data:
    rest:
      base-path: /api
  boot:
   admin:
     client:
       url: http://localhost:1111/      
management:
  endpoints:
    web:
      exposure:
        include: '*'
     
==================================================================        
